Today topics:

1.How to start rabbitmq server by different port
2.Server settings  via config files
3.log file verification
4.Managment plugin activation.


//////////////////////////////////////////////////////////////////////////
Exchange && Queues:


Message Flow in RabbitMQ
1. The producer publishes a message to an exchange. When creating an
exchange, its type must be specified. The different types of exchanges are
explained in detail later on in this book.
2. The exchange receives the message and is now responsible for the routing
of the message. The exchange looks at different message attributes and
keys depending on the exchange type.
3. In this case, we see two bindings to two different queues from the exchange.
The exchange routes the message to the correct queue, depending on these
attributes.
4. The messages stay in the queue until the consumer processes them.
5. The consumer then removes the message from the queue once handled.


Types of Exchanges
Only direct exchanges are used within our sample code in the upcoming
chapters. More in-depth understanding of the different exchange types, binding
keys, routing keys and how/when they should be used can be found in the chapter:
Exchanges, routing keys and bindings.


• Direct - A direct exchange delivers messages to queues based on a message
routing key. In a direct exchange, the message is routed to the queue with the
exact match of binding key as the routing key of the message. For example,
if the queue is bound to the exchange using the binding key ‘pdfprocess’, a
message published to the exchange with a routing key ‘pdfprocess’ is routed
to that queue.

• Topic - The topic exchange performs a wildcard match between the routing
key and the routing pattern specified in the binding.
• Fanout - A fanout exchange routes messages to all of the queues that are
bound to it.
• Headers - A header exchange uses the message header attributes for routing
purposes.

//////////////////////////////////////////////////////////////////////////////////////////

Demo:

• Direct - A direct exchange delivers messages to queues based on a message
routing key. In a direct exchange, the message is routed to the queue with the
exact match of binding key as the routing key of the message. For example,
if the queue is bound to the exchange using the binding key ‘pdfprocess’, a
message published to the exchange with a routing key ‘pdfprocess’ is routed
to that queue.

the message. A message goes to the queue(s) that have or has the exact match in
binding key to the routing key of the message. The direct exchange type is useful
to distinguish messages published to the same exchange using a simple string
identifier.


Fanout:

Fanout exchanges copy and route a received message to all queues that are
bound to it regardless of routing keys or pattern matching as with direct and topic
exchanges. Keys provided will be ignored.


Fanout exchanges can be useful when the same message needs to be sent to one
or more queues with consumers who may process the same message in different
ways, like in distributed systems designed to broadcast various state and configuration
updates.


Topic:

Topic exchanges route messages to a queue based on a wildcard match between
the routing key and something called the routing pattern, which is specified by the
queue binding. Messages can be routed to one or many queues depending on this
wildcard match

* - one or more
# - Zero or more


Headers:

Key-value pair matching

A Headers exchange routes messages based on arguments containing headers
and optional values. Similar to topic exchanges, headers exchanges decide their
routes based on header values instead of routing keys. A message is considered a
match if the value of the header equals the value specified on the binding.










